ds = read.table("hw08data1.txt", header=TRUE)
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
}
ds["x1"]
ds = read.table("hw08data1.txt", header=TRUE)
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
}
min(ds["x1"])
ds = read.table("hw08data1.txt", header=TRUE)
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
}
max(ds["x1"])
ds = read.table("hw08data1.txt", header=TRUE)
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
v2 = (x1 - min(ds["x1"])) / (max(ds["x1"]) - min(ds["x1"]) )
print(v2)
}
max(ds["x1"])
ds = read.table("hw08data1.txt", header=TRUE)
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
v2 = (x1 - min(ds["x1"])) / (max(ds["x1"]) - min(ds["x1"]) )
print(v2)
}
ds = read.table("hw08data1.txt", header=TRUE)
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
v2x1 = (x1 - min(ds["x1"])) / (max(ds["x1"]) - min(ds["x1"]) )
v2x2 = (x2 - min(ds["x2"])) / (max(ds["x2"]) - min(ds["x2"]) )
print(paste(v2x1, v2x2))
}
ds = read.table("hw08data1.txt", header=TRUE)
newDs = data.frame(matrix(ncol=3, nrow = 0))
colnames(newDs) = c("id", "x1", "x2")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
v2x1 = (x1 - min(ds["x1"])) / (max(ds["x1"]) - min(ds["x1"]) )
v2x2 = (x2 - min(ds["x2"])) / (max(ds["x2"]) - min(ds["x2"]) )
print(paste(v2x1, v2x2))
newDs[nrow(newDs) +1, ] = c(ds[i, "id"], v2x1, v2x2)
}
newDs
sqrt((170 - 185) ^ 2 + (56 - 72) ^ 2)
sqrt((160 - 185) ^ 2 + (60 - 72) ^ 2)
sqrt((168 - 185) ^ 2 + (60 - 72) ^ 2)
dst1 = sqrt((168 - 185) ^ 2 + (60 - 72) ^ 2)
dst2 = sqrt((168 - 170) ^ 2 + (60 - 56) ^ 2)
print(paste(dst1, dst2))
print((7+10+12)/3)
print((7+10+12)/3)
print((251 + 178 + 195) /3)
print((9 + 5 + 15)/3)
print((342 + 218 + 278)/3)
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2) )
}
print("Distatnce from Cluster 1")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2) )
}
print("")
print("Distatnce from Cluster 2")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 279.6) ^ 2) )
}
print("Distatnce from Cluster 1")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2) )
}
print("Distatnce from Cluster 2")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 279.6) ^ 2) )
}
print("Distatnce from Cluster 1")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2) )
}
print("Distatnce from Cluster 2")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 279.6) ^ 2) )
}
print("Distatnce from Cluster 1")
distCls1 = c()
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
distCls1 = c(distCls1, sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2))
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2) )
}
print(distCls1)
print("Distatnce from Cluster 2")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 279.6) ^ 2) )
}
print("Distatnce from Cluster 1")
distCls1 = c()
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
distCls1 = c(distCls1, sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2))
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2) )
}
print(distCls1)
print("Distatnce from Cluster 2")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
print( sqrt((x1 - 9.6) ^ 2 + (x2 - 279.6) ^ 2) )
}
distCls1
print("Distatnce from Cluster 1")
distCls1 = c()
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
distCls1 = c(distCls1, sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2))
}
print(distCls1)
print("Distatnce from Cluster 2")
distCls2 = c()
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
distCls2 = c(distCls2, sqrt((x1 - 9.6) ^ 2 + (x2 - 279.6) ^ 2))
}
print("Distatnce from Cluster 1")
distCls1 = c()
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
distCls1 = c(distCls1, sqrt((x1 - 9.6) ^ 2 + (x2 - 208) ^ 2))
}
print(distCls1)
print("Distatnce from Cluster 2")
distCls2 = c()
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
distCls2 = c(distCls2, sqrt((x1 - 9.6) ^ 2 + (x2 - 279.6) ^ 2))
}
print(distCls2)
ds2 = data.frame(
id = c(101,102,103,104,105,106),
x1 = c(43.07853,30.00267,134.00134,11.00727,71.20506,13.21968),
x2 = c(28.717939,101.600787,62.402885,61.771514,5.433231,84.634036)
)
ds2
ds2 = data.frame(
id = c(101,102,103,104,105,106),
x1 = distCls1,
x2 = distCls2
)
ds2
ds2 = data.frame(
id = ds["id"],
x1 = distCls1,
x2 = distCls2
)
ds2
ds2 = data.frame(
id = ds["id"],
x1 = distCls1,
x2 = distCls2
)
ds2
print("Distatnce from Cluster 1")
dist2Cls1 = c()
for(i in 1:nrow(ds2)) {
x1 = ds2[i, "x1"]
x2 = ds2[i, "x2"]
dist2Cls1 = c(dist2Cls1, sqrt((x1 - 18.076) ^ 2 + (x2 - 82.668) ^ 2))
}
print(dist2Cls1)
print("Distatnce from Cluster 2")
dist2Cls2 = c()
for(i in 1:nrow(ds2)) {
x1 = ds2[i, "x1"]
x2 = ds2[i, "x2"]
dist2Cls2 = c(dist2Cls2, sqrt((x1 - 82.761) ^ 2 + (x2 - 32.212) ^ 2))
}
print(distCls2)
ds3 = data.frame(
id = ds2["id"],
x1 = dist2Cls1,
x2 = dist2Cls2
)
ds3
print(mean(30.002, 11.007, 13.219))
print((30.002 + 11.007 + 13.219)/3)
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:ncol(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
#sqrt((x1 - 18.076) ^ 2 + (x2 - 82.668) ^ 2)
print(paste(x1,x2))
}
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
#sqrt((x1 - 18.076) ^ 2 + (x2 - 82.668) ^ 2)
print(paste(x1,x2))
}
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
#sqrt((x1 - 18.076) ^ 2 + (x2 - 82.668) ^ 2)
print(paste(x1,x2))
temp =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
temp = c(temp,sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(temp)
}
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
temp =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
temp = c(temp,sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(temp)
}
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
dMatrix[nrow(dMatrix) + 1] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = dst
}
dMatrix
dMatrix = data.frame()
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[i,] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[, i] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 6))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 0))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 0))
colnames(dMatrix) = c("c1", "c2", "c3", "c4", "c5", "c6")
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 0))
colnames(dMatrix) = c("c1", "c2", "c3", "c4", "c5", "c6")
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, "c1"
,sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 0))
colnames(dMatrix) = c("c1", "c2", "c3", "c4", "c5", "c6")
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, c("c1",sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2)))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = dst
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 0))
colnames(dMatrix) = c("c1", "c2", "c3", "c4", "c5", "c6")
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = c("c1", dst)
}
dMatrix
dMatrix = data.frame(matrix(ncol = 7, nrow = 0))
colnames(dMatrix) = c("c1", "c2", "c3", "c4", "c5", "c6")
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = c("c1", dst)
}
dMatrix
dMatrix = data.frame(matrix(ncol = 6, nrow = 0))
for (i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
dst =c()
for(i in 1:nrow(ds)) {
a1 = ds[i, "x1"]
a2 = ds[i, "x2"]
dst = c(dst, sqrt((x1 - a1) ^ 2 + (x2 - a2) ^ 2))
}
print(dst)
dMatrix[nrow(dMatrix) + 1,] = dst
}
dMatrix
View(dMatrix)
set.seed(1)
x = read.table("hw08data.txt", header = TRUE)
View(x)
View(x)
set.seed(1)
x = read.table("hw08data.txt", header = TRUE)
kmeans(x, 6)
set.seed(1)
x = read.table("hw08data.txt", header = TRUE)
km = kmeans(x, 6)
set.seed(1)
x = read.table("hw08data.txt", header = TRUE)
km = kmeans(x, 6)
km$size
set.seed(1)
x = read.table("hw08data.txt", header = TRUE)
km = kmeans(x, 5)
km$size
set.seed(1)
x = read.table("hw08data.txt", header = TRUE)
km = kmeans(x, 5)
km$size
set.seed(1)
x = read.table("hw08data.txt", header = TRUE)
km = kmeans(x, 5)
km$size
km$cluster
km$centers
ds = read.table("hw08data1.txt", header=TRUE)
newDs = data.frame(matrix(ncol=3, nrow = 0))
colnames(newDs) = c("id", "x1", "x2")
for(i in 1:nrow(ds)) {
x1 = ds[i, "x1"]
x2 = ds[i, "x2"]
v2x1 = (x1 - min(ds["x1"])) / (max(ds["x1"]) - min(ds["x1"]) )
v2x2 = (x2 - min(ds["x2"])) / (max(ds["x2"]) - min(ds["x2"]) )
print(paste(v2x1, v2x2))
newDs[nrow(newDs) +1, ] = c(ds[i, "id"], v2x1, v2x2)
}
newDs
