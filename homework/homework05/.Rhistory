x = read.table("student.txt", header=TRUE)
x = read.table("students.txt", header=TRUE)
x = read.table("students.txt", header=TRUE)
x = read.table("/Users/sajalshrestha/Documents/data-science-and-analytics/cis-635-knowledge-discovery-and-data-mining/students.txt", header=TRUE)
View(x)
View(x)
nrow(x)
x[,2]
x[,1]
x[,3]
x[,4]
x[,4] ==28
c(1,2,3)
c(2,2,2)
a = c(2,2,2)
b = c(1,2,3)
a * b
x[1,1]
x[1,2]
installed.packages()
?datasets
dir()
getwd()
names(iris)
attributes(iris)
# cluster coloring
hcav <- hclust(dist(penguins), method = "ave")
# Penguins dataset: https://github.com/allisonhorst/palmerpenguins
#install.packages("palmerpenguins")
library(palmerpenguins)
data(package = 'palmerpenguins')
# cluster coloring
hcav <- hclust(dist(penguins), method = "ave")
clu3 <- cutree(hcav, k = 3)
clus <- factor(clu3)
clus_penguins <- cbind(penguins, clus)
ggparcoord(clus_penguins, columns = 3:6, groupColumn = "clus", scale = "uniminmax", mapping = aes(size = 0.5)) + ggplot2::scale_size_identity() + xlab("") +  ylab("")
library(ggplot2)
require(GGally)
# cluster coloring
hcav <- hclust(dist(penguins), method = "ave")
clu3 <- cutree(hcav, k = 3)
clus <- factor(clu3)
clus_penguins <- cbind(penguins, clus)
ggparcoord(clus_penguins, columns = 3:6, groupColumn = "clus", scale = "uniminmax", mapping = aes(size = 0.5)) + ggplot2::scale_size_identity() + xlab("") +  ylab("")
# cluster coloring
hcav <- hclust(dist(penguins), method = "ave")
clu3 <- cutree(hcav, k = 3)
clus <- factor(clu3)
clus_penguins <- cbind(penguins, clus)
ggparcoord(clus_penguins, columns = 3:6, groupColumn = "clus", scale = "globalminmax", mapping = aes(size = 0.5)) + ggplot2::scale_size_identity() + xlab("") +  ylab("")
# cluster coloring
hcav <- hclust(dist(penguins), method = "ave")
clu3 <- cutree(hcav, k = 3)
clus <- factor(clu3)
clus_penguins <- cbind(penguins, clus)
ggparcoord(clus_penguins, columns = 3:6, groupColumn = "clus", scale = "globalminmax", mapping = aes(size = 0.5)) + ggplot2::scale_size_identity() + xlab("") +  ylab("") + theme(legend.position = "none")
setwd("~/Documents/GVSU/cis-635-knowledge-discovery-and-data-mining/week05")
library(e1071)
x = read.table("hw05dataTrain.txt", header=TRUE)
View(x)
View(x)
x = read.table("hw05dataTrain.txt", header=TRUE)
ind0 = xp[,3] == 0
x = read.table("hw05dataTrain.txt", header=TRUE)
ind0 = x[,3] == 0
View(x)
View(x)
x = read.table("hw05dataTrain.txt", header=TRUE)
ind0 = x[,3] == 0
ind0
x = read.table("hw05dataTrain.txt", header=TRUE)
ind0 = x[,3] == 0
ind1 = x[,3] == 1
ind2 = x[,3] == 2
x01 = x[ind0 | ind1]
x = read.table("hw05dataTrain.txt", header=TRUE)
ind0 = x[,3] == 0
ind1 = x[,3] == 1
ind2 = x[,3] == 2
x01 = x[ind0 | ind1,]
View(x01)
View(x01)
x = read.table("hw05dataTrain.txt", header=TRUE)
ind0 = x[,3] == 0
ind1 = x[,3] == 1
ind2 = x[,3] == 2
x01 = x[ind0 | ind1,]
ind = x01[,3] == 0
x01[ind,3] = 1
x01[!ind, 3] = -1
x01[,3] = as.factor((x01[,3]))
View(x01)
View(x01)
x = read.table("hw05dataTrain.txt", header=TRUE)
ind0 = x[,3] == 0
ind1 = x[,3] == 1
ind2 = x[,3] == 2
x01 = x[ind0 | ind1,]
ind = x01[,3] == 0
x01[ind,3] = 1
x01[!ind, 3] = -1
x01[,3] = as.factor((x01[,3]))
mod01 = svm(x01[,1:2], x01[,3])
x = read.table("hw05dataTrain.txt", header=TRUE)
y = read.table("hw05dataTest.txt", header=TRUE)
ind0 = x[,3] == 0
ind1 = x[,3] == 1
ind2 = x[,3] == 2
x01 = x[ind0 | ind1,]
ind = x01[,3] == 0
x01[ind,3] = 1
x01[!ind, 3] = -1
x01[,3] = as.factor((x01[,3]))
mod01 = svm(x01[,1:2], x01[,3])
pred =  predict(mod01, y[,1:2])
x = read.table("hw05dataTrain.txt", header=TRUE)
y = read.table("hw05dataTest.txt", header=TRUE)
ind0 = x[,3] == 0
ind1 = x[,3] == 1
ind2 = x[,3] == 2
x01 = x[ind0 | ind1,]
ind = x01[,3] == 0
x01[ind,3] = 1
x01[!ind, 3] = -1
x01[,3] = as.factor((x01[,3]))
mod01 = svm(x01[,1:2], x01[,3])
pred =  predict(mod01, y[,1:2])
pred[1:10]
View(x01)
View(x01)
x = read.table("hw05dataTrain.txt", header=TRUE)
y = read.table("hw05dataTest.txt", header=TRUE)
ind0 = x[,3] == 0
ind1 = x[,3] == 1
ind2 = x[,3] == 2
x01 = x[ind0 | ind1,]
ind = x01[,3] == 0
x01[ind,3] = 1
x01[!ind, 3] = -1
x01[,3] = as.factor((x01[,3]))
mod01 = svm(x01[,1:2], x01[,3])
pred =  predict(mod01, y[,1:2])
x02 = x[ind0 | ind2]
x = read.table("hw05dataTrain.txt", header=TRUE)
y = read.table("hw05dataTest.txt", header=TRUE)
ind0 = x[,3] == 0
ind1 = x[,3] == 1
ind2 = x[,3] == 2
x01 = x[ind0 | ind1,]
ind = x01[,3] == 0
x01[ind,3] = 1
x01[!ind, 3] = -1
x01[,3] = as.factor((x01[,3]))
mod01 = svm(x01[,1:2], x01[,3])
pred =  predict(mod01, y[,1:2])
x02 = x[ind0 | ind2,]
x = read.table("hw05dataTrain.txt", header=TRUE)
y = read.table("hw05dataTest.txt", header=TRUE)
ind0 = x[,3] == 0
ind1 = x[,3] == 1
ind2 = x[,3] == 2
x01 = x[ind0 | ind1,]
ind = x01[,3] == 0
x01[ind,3] = 1
x01[!ind, 3] = -1
x01[,3] = as.factor((x01[,3]))
mod01 = svm(x01[,1:2], x01[,3])
pred =  predict(mod01, y[,1:2])
x02 = x[ind0 | ind2,]
x12 = x[ind1|ind2,]
View(x02)
View(x02)
x = read.table("hw05dataTrain.txt", header = TRUE)
y = read.table("hw05dataTest.txt", header = TRUE)
ind0 = x[, 3] == 0
ind1 = x[, 3] == 1
ind2 = x[, 3] == 2
x01 = x[ind0 | ind1, ]
ind = x01[, 3] == 0
x01[ind, 3] = 1
x01[!ind, 3] = -1
x01[, 3] = as.factor((x01[, 3]))
mod01 = svm(x01[, 1:2], x01[, 3])
pred =  predict(mod01, y[, 1:2])
x02 = x[ind0 | ind2, ]
ind = x02[, 3] == 0
x02[ind, 3] = 1
x02[!ind, 3] = -1
x12 = x[ind1 | ind2, ]
View(x02)
View(x02)
x = read.table("hw05dataTrain.txt", header = TRUE)
y = read.table("hw05dataTest.txt", header = TRUE)
ind0 = x[, 3] == 0
ind1 = x[, 3] == 1
ind2 = x[, 3] == 2
x01 = x[ind0 | ind1, ]
ind = x01[, 3] == 0
x01[ind, 3] = 1
x01[!ind, 3] = -1
x01[, 3] = as.factor((x01[, 3]))
mod01 = svm(x01[, 1:2], x01[, 3])
pred =  predict(mod01, y[, 1:2])
x02 = x[ind0 | ind2, ]
ind = x02[, 3] == 0
x02[ind, 3] = 1
x02[!ind, 3] = -1
x02[, 3] = as.factor(x02[,3])
x12 = x[ind1 | ind2, ]
View(x01)
View(x12)
View(x12)
x = read.table("hw05dataTrain.txt", header = TRUE)
y = read.table("hw05dataTest.txt", header = TRUE)
ind0 = x[, 3] == 0
ind1 = x[, 3] == 1
ind2 = x[, 3] == 2
x01 = x[ind0 | ind1, ]
ind = x01[, 3] == 0
x01[ind, 3] = 1
x01[!ind, 3] = -1
x01[, 3] = as.factor((x01[, 3]))
mod01 = svm(x01[, 1:2], x01[, 3])
pred =  predict(mod01, y[, 1:2])
x02 = x[ind0 | ind2, ]
ind = x02[, 3] == 0
x02[ind, 3] = 1
x02[!ind, 3] = -1
x02[, 3] = as.factor(x02[,3])
x12 = x[ind1 | ind2, ]
ind = x12[,3] == 1
x12[ind, 3] = 1
x12[!ind, 3] = -1
x12[,3]  = as.factor(x12[,3])
x = read.table("hw05dataTrain.txt", header = TRUE)
y = read.table("hw05dataTest.txt", header = TRUE)
ind0 = x[, 3] == 0
ind1 = x[, 3] == 1
ind2 = x[, 3] == 2
x01 = x[ind0 | ind1,]
ind = x01[, 3] == 0
x01[ind, 3] = 1
x01[!ind, 3] = -1
x01[, 3] = as.factor((x01[, 3]))
mod01 = svm(x01[, 1:2], x01[, 3])
pred01 =  predict(mod01, y[, 1:2])
x02 = x[ind0 | ind2,]
ind = x02[, 3] == 0
x02[ind, 3] = 1
x02[!ind, 3] = -1
x02[, 3] = as.factor(x02[, 3])
mod02 = svm(x02[, 1:2], x02[, 3])
pred02 = predict(mod02, y[, 1:2])
x12 = x[ind1 | ind2,]
ind = x12[, 3] == 1
x12[ind, 3] = 1
x12[!ind, 3] = -1
x12[, 3]  = as.factor(x12[, 3])
mod12 = svm(x12[, 1:2], x12[, 3])
pred12 = predict(mod12, y[, 1:2])
pred12
table(pred, y[,3])
table(pred01, y[,3])
table(pred02, y[,3])
table(pred12, y[,3])
mod01
plot(mod01, x)
plot(mod01, x[,1:2])
confusionMatrix(table(pred12, y[,3]))
install.packages("caret")
library(caret)
confusionMatrix(table(pred12, y[,3]))
confusionMatrix(pred02, y[,3])
pred02
confusionMatrix(pred02, x02[, 3])
table(pred01, pred02, y[,3])
table( pred02, y[,3])
table( pred12, y[,3])
table( pred12, y[,3])
View(x01)
View(x01)
pred01
pred02
pred01[0]
pred01[1]
pred01[2]
data.frame(y[,3], pred01, pred02)
data.frame(y[,3], pred01, pred02, pred03)
data.frame(y[,3], pred01, pred02, pred12)
View(x)
pred01
table( pred12, y[,3])
2.1 * 1 - 2 * 3.8 + 4
print(2.1 * 1 - 2 * 3.8 + 4)
print(9.7 * 1 - 2 * 1.3 + 4)
print(7.2 * 1 - 2 * 1.3 + 4)
View(mod02)
data.frame(y[,3], pred01, pred02, pred12)
ind = pred == 1
pred01[ind] = 0
pred01[!ind] = 1
pred01
ind = pred == 1
print(ind)
pred01[ind] = 0
pred01[!ind] = 1
pred01
print(pred)
ind = pred == 1
pred01[ind] = 0
pred01[!ind] = 1
pred01
ind = pred == 1
pred01[ind,1] = 0
ind = pred == 1
pred01[ind] = 0
pred01[!ind] = 1
pred01
View(x)
View(x)
table( pred12, y[,3])
confusionMatrix(pred02, y[, 3])
r = data.frame(y[,3], pred01, pred02, pred12)
for(i in 1:nrow(r)) {
print(i)
}
r = data.frame(y[,3], pred01, pred02, pred12)
for(i in 1:nrow(r)) {
print(r[i])
}
r = data.frame(y[,3], pred01, pred02, pred12)
for(i in 1:nrow(r)) {
print(r[i,])
}
